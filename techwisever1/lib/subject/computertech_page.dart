// lib/subject/computertech_page.dart
import 'package:flutter/material.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:techwisever1/main_screen.dart'; // ‚úÖ ‡∏Å‡∏•‡∏±‡∏ö‡∏£‡∏≤‡∏Å‡∏ó‡∏µ‡πà MainScreen ‡πÄ‡∏™‡∏°‡∏≠
import 'package:techwisever1/services/app_nav.dart';
import 'lesson_intro.dart';

class ComputerTechPage extends StatelessWidget {
  final VoidCallback? onBack;
  const ComputerTechPage({super.key, this.onBack});

  // ‚úÖ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏î‡πà‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ú‡πà‡∏≤‡∏ô "‡∏ï‡πà‡∏≠‡∏ö‡∏ó" ‡∏ï‡∏≤‡∏° Firebase: ‡∏ö‡∏ó 1=4, ‡∏ö‡∏ó 2=5, ‡∏ö‡∏ó 3=4
  static const Map<int, int> _requiredStagesPerLessonMap = {
    1: 4,
    2: 5,
    3: 4,
  };
  static int _requiredFor(int lesson) =>
      _requiredStagesPerLessonMap[lesson] ?? 4;

  // ‚úÖ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏ó (‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
  List<_LessonMeta> get _lessons => const [
        _LessonMeta(
          lesson: 1,
          title: '‡∏ö‡∏ó‡∏ó‡∏µ‡πà 1\n‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå',
          image: 'assets/images/TC1.png',
          intro:
              '‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ã‡∏≠‡∏ü‡∏ï‡πå‡πÅ‡∏ß‡∏£‡πå/‡∏Æ‡∏≤‡∏£‡πå‡∏î‡πÅ‡∏ß‡∏£‡πå ‡πÅ‡∏•‡∏∞‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡πÅ‡∏ö‡∏ö‡∏ù‡∏∂‡∏Å‡∏´‡∏±‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏ö‡∏ó',
        ),
        _LessonMeta(
          lesson: 2,
          title: '‡∏ö‡∏ó‡∏ó‡∏µ‡πà 2\n‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏û‡∏±‡∏í‡∏ô‡∏≤',
          image: 'assets/images/TC2.jpg',
          intro:
              '‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å IDE, ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≠‡∏ô‡πÇ‡∏ó‡∏£‡∏• (‡πÄ‡∏ä‡πà‡∏ô Git) ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏†‡∏≤‡∏û‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏à‡∏£‡∏¥‡∏á',
        ),
        _LessonMeta(
          lesson: 3,
          title: '‡∏ö‡∏ó‡∏ó‡∏µ‡πà 3\n‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°',
          image: 'assets/images/TC3.png',
          intro:
              '‡∏õ‡∏π‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡πÅ‡∏ô‡∏ß‡∏Ñ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç ‡∏•‡∏π‡∏õ ‡πÅ‡∏•‡∏∞‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏á‡πà‡∏≤‡∏¢ ‡πÜ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ù‡∏∂‡∏Å‡∏´‡∏±‡∏î',
        ),
        // üëâ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏ó 4,5,... ‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡πÄ‡∏ï‡∏¥‡∏°‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô
      ];

  // ‚úÖ ‡πÑ‡∏õ‡πÅ‡∏ó‡πá‡∏ö "‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å" ‡πÇ‡∏î‡∏¢‡πÉ‡∏´‡πâ MainScreen ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏≤‡∏Å‡πÄ‡∏™‡∏°‡∏≠
  void _goHome(BuildContext context) {
    AppNav.bottomIndex.value = 0; // ‡∏Ñ‡∏á‡∏Ñ‡πà‡∏≤‡πÑ‡∏ß‡πâ‡πÉ‡∏´‡πâ‡∏™‡∏≠‡∏î‡∏Ñ‡∏•‡πâ‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡πÅ‡∏≠‡∏õ
    Navigator.of(context).pushAndRemoveUntil(
      MaterialPageRoute(builder: (_) => const MainScreen(initialIndex: 0)),
      (r) => false,
    );
  }

  // ‚úÖ ‡πÑ‡∏õ‡πÅ‡∏ó‡πá‡∏ö "‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå" ‡πÇ‡∏î‡∏¢‡πÉ‡∏´‡πâ MainScreen ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏≤‡∏Å‡πÄ‡∏™‡∏°‡∏≠
  void _goProfile(BuildContext context) {
    AppNav.bottomIndex.value = 1;
    Navigator.of(context).pushAndRemoveUntil(
      MaterialPageRoute(builder: (_) => const MainScreen(initialIndex: 1)),
      (r) => false,
    );
  }

  // ‚úÖ Back ‡∏õ‡∏Å‡∏ï‡∏¥ (‡∏ñ‡∏≠‡∏¢ 1 ‡∏ä‡∏±‡πâ‡∏ô)
  void _goBack(BuildContext context) {
    if (onBack != null) {
      onBack!();
    } else {
      Navigator.pop(context);
    }
  }

  // ‚úÖ ‡∏™‡∏£‡∏∏‡∏õ‡∏ö‡∏ó‡∏ó‡∏µ‡πà "‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß" ‡∏à‡∏≤‡∏Å users/{uid}/progress/computer_L{n}.completedStages
  Set<int> _computeCompletedLessons(QuerySnapshot qs) {
    final done = <int>{};
    final re = RegExp(r'^computer_L(\d+)$');
    for (final d in qs.docs) {
      final m = re.firstMatch(d.id);
      if (m == null) continue;
      final lessonNo = int.tryParse(m.group(1)!);
      if (lessonNo == null) continue;

      final data = (d.data() as Map<String, dynamic>?) ?? {};
      final raw = data['completedStages'];
      final list = raw is List ? List.of(raw) : <dynamic>[];

      // ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥
      final uniqueInts = <int>{};
      for (final e in list) {
        if (e is int) uniqueInts.add(e);
      }

      // ‚úÖ ‡∏ú‡πà‡∏≤‡∏ô‡∏ö‡∏ó‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏£‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏î‡πà‡∏≤‡∏ô "‡∏ï‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á" ‡∏Ç‡∏≠‡∏á‡∏ö‡∏ó‡∏ô‡∏±‡πâ‡∏ô
      final required = _requiredFor(lessonNo);
      if (uniqueInts.length >= required) {
        done.add(lessonNo);
      }
    }
    return done;
  }

  @override
  Widget build(BuildContext context) {
    final uid = FirebaseAuth.instance.currentUser?.uid;

    return WillPopScope(
      onWillPop: () async {
        _goBack(context); // ‚úÖ ‡∏ñ‡∏≠‡∏¢ 1 ‡∏ä‡∏±‡πâ‡∏ô
        return false;
      },
      child: Scaffold(
        body: Stack(
          children: [
            // ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á
            SizedBox.expand(
              child: Image.asset('assets/images/backgroundselect.jpg', fit: BoxFit.cover),
            ),

            // AppBar (‡∏™‡πÑ‡∏ï‡∏•‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö electronics_page)
            Positioned(
              top: 0, left: 0, right: 0,
              child: Container(
                height: 80,
                decoration: BoxDecoration(
                  color: Colors.white.withOpacity(0.95),
                  borderRadius: const BorderRadius.only(
                    bottomLeft: Radius.circular(24),
                    bottomRight: Radius.circular(24),
                  ),
                  boxShadow: [BoxShadow(color: Colors.black.withOpacity(0.2), blurRadius: 8, offset: const Offset(0, 2))],
                ),
                child: Row(
                  children: [
                    IconButton(
                      icon: const Icon(Icons.arrow_back),
                      onPressed: () => _goBack(context),
                    ),
                    const Expanded(
                      child: Center(
                        child: Text('‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå',
                            style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold)),
                      ),
                    ),
                    const SizedBox(width: 48),
                  ],
                ),
              ),
            ),

            // ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤
            SafeArea(
              child: Padding(
                padding: const EdgeInsets.only(top: 100, bottom: 20),
                child: uid == null
                    ? _buildList(context, const <int>{})
                    : StreamBuilder<QuerySnapshot>(
                        stream: FirebaseFirestore.instance
                            .collection('users')
                            .doc(uid)
                            .collection('progress')
                            .snapshots(),
                        builder: (context, snap) {
                          final completed = snap.hasData ? _computeCompletedLessons(snap.data!) : <int>{};
                          return _buildList(context, completed);
                        },
                      ),
              ),
            ),
          ],
        ),

        // BottomNav: ‡πÑ‡∏õ Home/‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå ‡∏î‡πâ‡∏ß‡∏¢ MainScreen ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏≤‡∏Å‡πÄ‡∏™‡∏°‡∏≠
        bottomNavigationBar: BottomNavigationBar(
          currentIndex: 0,
          onTap: (i) => i == 0 ? _goHome(context) : _goProfile(context),
          items: const [
            BottomNavigationBarItem(icon: Icon(Icons.home), label: '‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å'),
            BottomNavigationBarItem(icon: Icon(Icons.person), label: '‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå'),
          ],
        ),
      ),
    );
  }

  Widget _buildList(BuildContext context, Set<int> completed) {
    return SingleChildScrollView(
      child: Column(
        children: _lessons.map((meta) {
          final l = meta.lesson;
          final isUnlocked = l == 1 ? true : completed.contains(l - 1);
          final lockReason = l == 1 ? null : '‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡πà‡∏≤‡∏ô‡∏ö‡∏ó‡∏ó‡∏µ‡πà ${l - 1}';
          return Padding(
            padding: const EdgeInsets.only(bottom: 20),
            child: _LessonCard(
              title: meta.title,
              imagePath: meta.image,
              locked: !isUnlocked,
              lockReason: lockReason,
              onTap: () {
                if (!isUnlocked) return;
                Navigator.of(context).push(
                  MaterialPageRoute(
                    builder: (_) => LessonIntroPage(
                      subject: 'computer',
                      lesson: l,
                      title: meta.cleanTitle,
                      intro: meta.intro,
                      heroAsset: meta.image,
                    ),
                  ),
                );
              },
            ),
          );
        }).toList(),
      ),
    );
  }
}

/* ============================ Models/Widgets ========================== */

class _LessonMeta {
  final int lesson;
  final String title;
  final String image;
  final String intro;
  const _LessonMeta({required this.lesson, required this.title, required this.image, required this.intro});
  String get cleanTitle => title.replaceAll('\n', ' ');
}

class _LessonCard extends StatelessWidget {
  final String title;
  final String imagePath;
  final VoidCallback onTap;
  final bool locked;
  final String? lockReason;
  const _LessonCard({
    required this.title, required this.imagePath, required this.onTap, this.locked = false, this.lockReason,
  });

  @override
  Widget build(BuildContext context) {
    return GestureDetector(
      onTap: locked ? null : onTap,
      child: Container(
        margin: const EdgeInsets.symmetric(horizontal: 20),
        height: 160,
        decoration: BoxDecoration(
          borderRadius: BorderRadius.circular(20),
          boxShadow: [BoxShadow(color: Colors.black.withOpacity(0.15), blurRadius: 6, offset: const Offset(0, 3))],
        ),
        child: ClipRRect(
          borderRadius: BorderRadius.circular(20),
          child: Stack(
            children: [
              Opacity(
                opacity: locked ? 0.6 : 1.0,
                child: Image.asset(imagePath, width: double.infinity, height: 160, fit: BoxFit.cover),
              ),
              Positioned(
                left: 12, top: 12,
                child: Container(
                  padding: const EdgeInsets.symmetric(horizontal: 10, vertical: 6),
                  decoration: BoxDecoration(color: Colors.white.withOpacity(0.85), borderRadius: BorderRadius.circular(12)),
                  child: Text(title, style: const TextStyle(fontSize: 18, fontWeight: FontWeight.bold, color: Colors.black)),
                ),
              ),
              Positioned(
                bottom: 12, right: 12,
                child: ElevatedButton(
                  onPressed: locked ? null : onTap,
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Colors.white.withOpacity(0.9),
                    foregroundColor: Colors.black,
                    shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
                  ),
                  child: const Text('‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ô', style: TextStyle(fontWeight: FontWeight.w600)),
                ),
              ),
              if (locked)
                Container(
                  color: Colors.black.withOpacity(0.25),
                  alignment: Alignment.center,
                  child: Row(mainAxisSize: MainAxisSize.min, children: [
                    const Icon(Icons.lock, color: Colors.white), const SizedBox(width: 8),
                    Text(lockReason ?? '‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡πà‡∏≤‡∏ô‡∏ö‡∏ó‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤',
                        style: const TextStyle(color: Colors.white, fontWeight: FontWeight.w700)),
                  ]),
                ),
            ],
          ),
        ),
      ),
    );
  }
}
