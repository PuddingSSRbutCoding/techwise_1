import 'package:flutter/material.dart';
import 'package:firebase_auth/firebase_auth.dart';
import '../services/user_service.dart';
import '../services/ui_constants.dart';
import 'admin_dashboard_page.dart';
import 'admin_user_management_page.dart';
import 'admin_lesson_management_page.dart';
import 'admin_quiz_management_page.dart';

class AdminPrivilegePage extends StatelessWidget {
  const AdminPrivilegePage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: UIConstants.backgroundColor,
      appBar: AppBar(
        backgroundColor: UIConstants.surfaceColor,
        elevation: UIConstants.cardElevation,
        leading: IconButton(
          icon: Icon(
            Icons.arrow_back_ios_new,
            color: UIConstants.surfaceColor,
            size: 24,
          ),
          onPressed: () => Navigator.pop(context),
          style: IconButton.styleFrom(
            backgroundColor: UIConstants.primaryColor,
            foregroundColor: UIConstants.surfaceColor,
            padding: const EdgeInsets.all(8),
            minimumSize: const Size(44, 44),
          ),
        ),
        title: Text(
          '‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô',
          style: TextStyle(
            color: UIConstants.textPrimaryColor, 
            fontWeight: FontWeight.bold
          ),
        ),
        centerTitle: true,
      ),
      body: Column(
        crossAxisAlignment: CrossAxisAlignment.center,
        children: [
          const SizedBox(height: 24),

          // üîµ ‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå (‡∏ã‡πâ‡∏≥‡πÅ‡∏ö‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏õ‡∏Å‡∏ï‡∏¥)
          Center(
            child: Stack(
              alignment: Alignment.center,
              children: [
                ClipRRect(
                  borderRadius: BorderRadius.circular(60),
                  child: Image.asset(
                    'assets/images/profile.png', // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏≤‡∏°‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ
                    width: 120,
                    height: 120,
                    fit: BoxFit.cover,
                  ),
                ),
                const Positioned(
                  bottom: 0,
                  child: Icon(Icons.camera_alt, size: 24),
                )
              ],
            ),
          ),
          const SizedBox(height: 10),

          FutureBuilder<User?>(
            future: Future.value(FirebaseAuth.instance.currentUser),
            builder: (context, snapshot) {
              final user = snapshot.data;
              return Text(
                user?.displayName ?? user?.email ?? '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ',
                style: const TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
              );
            },
          ),

          const SizedBox(height: 30),

          // üîµ ‡∏õ‡∏∏‡πà‡∏°: ‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
          AdminOptionButton(
            icon: Icons.dashboard,
            label: '‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô',
            onTap: () async {
              final user = FirebaseAuth.instance.currentUser;
              if (user != null) {
                final isAdmin = await UserService.isAdmin(user.uid);
                if (isAdmin) {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => const AdminDashboardPage()),
                  );
                } else {
                  ScaffoldMessenger.of(context).showSnackBar(
                    const SnackBar(
                      content: Text('‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ'),
                      backgroundColor: Colors.red,
                    ),
                  );
                }
              }
            },
          ),

          const SizedBox(height: 16),

          // üîµ ‡∏õ‡∏∏‡πà‡∏°: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
          AdminOptionButton(
            icon: Icons.people,
            label: '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ',
            onTap: () async {
              final user = FirebaseAuth.instance.currentUser;
              if (user != null) {
                final isAdmin = await UserService.isAdmin(user.uid);
                if (isAdmin) {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => const AdminUserManagementPage()),
                  );
                } else {
                  ScaffoldMessenger.of(context).showSnackBar(
                    const SnackBar(
                      content: Text('‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ'),
                      backgroundColor: Colors.red,
                    ),
                  );
                }
              }
            },
          ),

          const SizedBox(height: 16),

          // üîµ ‡∏õ‡∏∏‡πà‡∏°: ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)
          AdminOptionButton(
            icon: Icons.refresh,
            label: '‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô (‡∏ó‡∏î‡∏™‡∏≠‡∏ö)',
            onTap: () async {
              final user = FirebaseAuth.instance.currentUser;
              if (user != null) {
                final isAdmin = await UserService.isAdmin(user.uid);
                if (isAdmin) {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => const AdminLessonManagementPage()),
                  );
                } else {
                  ScaffoldMessenger.of(context).showSnackBar(
                    const SnackBar(
                      content: Text('‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ'),
                      backgroundColor: Colors.red,
                    ),
                  );
                }
              }
            },
          ),

          const SizedBox(height: 16),

          // üîµ ‡∏õ‡∏∏‡πà‡∏°: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏ó‡∏ó‡∏î‡∏™‡∏≠‡∏ö
          AdminOptionButton(
            icon: Icons.quiz,
            label: '‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏ó‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
            onTap: () async {
              final user = FirebaseAuth.instance.currentUser;
              if (user != null) {
                final isAdmin = await UserService.isAdmin(user.uid);
                if (isAdmin) {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => const AdminQuizManagementPage()),
                  );
                } else {
                  ScaffoldMessenger.of(context).showSnackBar(
                    const SnackBar(
                      content: Text('‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ'),
                      backgroundColor: Colors.red,
                    ),
                  );
                }
              }
            },
          ),

          const SizedBox(height: 16),

          // üîµ ‡∏õ‡∏∏‡πà‡∏°: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ö‡∏ó‡∏ó‡∏î‡∏™‡∏≠‡∏ö
          AdminOptionButton(
            icon: Icons.manage_accounts,
            label: '‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ö‡∏ó‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
            onTap: () async {
              final user = FirebaseAuth.instance.currentUser;
              if (user != null) {
                final isAdmin = await UserService.isAdmin(user.uid);
                if (isAdmin) {
                  Navigator.push(
                    context,
                    MaterialPageRoute(builder: (context) => const AdminQuizManagementPage()),
                  );
                } else {
                  ScaffoldMessenger.of(context).showSnackBar(
                    const SnackBar(
                      content: Text('‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ'),
                      backgroundColor: Colors.red,
                    ),
                  );
                }
              }
            },
          ),


        ],
      ),
    );
  }
}

class AdminOptionButton extends StatelessWidget {
  final IconData icon;
  final String label;
  final VoidCallback onTap;

  const AdminOptionButton({
    super.key,
    required this.icon,
    required this.label,
    required this.onTap,
  });

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.symmetric(horizontal: 32),
      child: InkWell(
        onTap: onTap,
        borderRadius: BorderRadius.circular(16),
        child: Container(
          padding: const EdgeInsets.symmetric(vertical: 16, horizontal: 20),
          decoration: BoxDecoration(
            color: Colors.blue.shade50,
            borderRadius: BorderRadius.circular(16),
            boxShadow: [
              BoxShadow(
                color: Colors.white.withValues(alpha: 0.9),
                blurRadius: 4,
                offset: const Offset(0, 2),
              ),
            ],
          ),
          child: Row(
            children: [
              Icon(icon, size: 30, color: Colors.blue),
              const SizedBox(width: 16),
              Text(
                label,
                style: const TextStyle(fontSize: 18, fontWeight: FontWeight.w500),
              ),
            ],
          ),
        ),
      ),
    );
  }
} 